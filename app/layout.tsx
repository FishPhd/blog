import type { Metadata } from "next";
import { Cookie, Inter, Spline_Sans_Mono, Work_Sans } from "next/font/google";
import "./globals.css";
import { cn } from "@/utils/tailwind";
import Header from "@/components/Header/Header";
import Footer from "@/components/Footer/Footer";
import ThemeProvider from "@/components/Providers/ThemeProvider";
import { createContext, useState } from "react";
import { cookies } from "next/headers";

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

const mainFont = Work_Sans({
  subsets: ["latin"],
  display: "fallback",
  weight: "variable",
  variable: "--font-family",
});
const monoFont = Spline_Sans_Mono({
  subsets: ["latin"],
  display: "fallback",
  weight: "variable",
  variable: "--font-family-mono",
});

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const savedTheme =
    (cookies().get("color-theme")?.value as "light" | "dark") ?? "light";

  return (
    <html lang="en" className={cn(mainFont.className)}>
      <body
        className={cn(
          "bg-gradient-to-t from-green-500 to-green-300 min-h-screen dark:from-red-400 dark:to-red-300",
          { dark: savedTheme === "dark" }
        )}
      >
        <ThemeProvider
          theme={savedTheme}
          changeTheme={async () => {
            "use server";
            cookies().set(
              "color-theme",
              savedTheme === "light" ? "dark" : "light",
              { expires: 1000 }
            );
          }}
        >
          <Header />
          <main>{children}</main>
          <Footer />
        </ThemeProvider>
      </body>
    </html>
  );
}
